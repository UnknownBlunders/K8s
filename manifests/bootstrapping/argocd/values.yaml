configs:
  cm:
    accounts.ethan: login
    accounts.ethan.enabled: true
    kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
    application.instanceLabelKey: argocd.argoproj.io/instance
    url: https://argocd.blunders.me
  rbac:
    policy.default: role:default-deny # I'd just prefer you can't do anything unless I allow it

    # The safe-user role is based on the bulitin readonly role.
    # Just add in the ability to sync (and, more usefully, terminate stuck syncs)
    # and delete stuff. It's ok to delete stuff because Argo will recreate it.
    # Since we are depending on argo to recreate it, we need to also explicitly
    # deny the ability to delete argo, and the root apps
    policy.csv: |
      p, role:default-deny, *, *, *, deny

      p, role:safe-user, applications, delete/*, */*, allow
      p, role:safe-user, applications, delete, */*, allow
      p, role:safe-user, applications, sync, */*, allow
      p, role:safe-user, applications, delete, default/argocd, deny
      p, role:safe-user, applications, delete/*, default/argocd, deny
      p, role:safe-user, applications, delete, default/app-applicationsets, deny
      p, role:safe-user, applications, delete, default/bootstrapping-applicationset, deny
      g, role:safe-user, role:readonly

      g, ethan, role:safe-user
  params:
    server.insecure: "true"
  secret:
    extra:
      accounts.ethan.password: $2a$10$jy6gx.UO6hl8yJqjK8iabukQR8Nyo7k.xfG.d.tkcCPgDg6ALJ/AO

server:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations: {cert-manager.io/cluster-issuer: "prod-cert-issuer"}
    hostname: argocd.blunders.me
    extraTls:
    - secretName: argocd-cert
      hosts:
      - argocd.blunders.me