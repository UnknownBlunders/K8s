
controllers:
  main:
    containers:
      main:
        env:
          TZ: America/Chicago
          LOG_LEVEL: verbose
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault  
        image:
          # renovate: datasource=github-releases depName=immich-app/immich
          tag: "v2.0.1"

immich:
  metrics:
    enabled: true
  persistence:
    library:
      existingClaim: immich-photos-pvc


valkey:
  enabled: true
  controllers:
    main:
      containers:
        main:
          image:
            repository: docker.io/valkey/valkey
            # renovate: datasource=docker depName=valkey/valkey
            tag: "9.0-alpine"
            pullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 120Mi
            limits:
              memory: 120Mi
          securityContext:
              runAsUser: 1009
              runAsGroup: 1009
  persistence:
    data:
      type: persistentVolumeClaim
      existingClaim: immich-redis-pvc


server:
  controllers:
    main:
      containers:
        main:
          env:
            DB_HOSTNAME: immich-pg-service
            DB_USERNAME:
              valueFrom:
                secretKeyRef:
                  name: immich-pg-secret
                  key: POSTGRES_USER
            DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: immich-pg-secret
                  key: POSTGRES_PASSWORD
            DB_DATABASE_NAME:
              valueFrom:
                secretKeyRef:
                  name: immich-pg-secret
                  key: POSTGRES_DB
          resources:
            requests:
              cpu: 100m
              memory: 2022M
            limits:
              memory: 2022M

          securityContext:
              runAsUser: 1007
              runAsGroup: 1007
  ingress:
    main:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "prod-cert-issuer"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
        - host: photos.blunders.me
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - photos.blunders.me
          secretName: immich-web-tls

machine-learning:
  controllers:
    main:
      containers:
        main:
          env:
            DB_HOSTNAME: immich-pg-service
            DB_USERNAME:
              valueFrom:
                secretKeyRef:
                  name: immich-pg-secret
                  key: POSTGRES_USER
            DB_PASSWORD:
              valueFrom:
                secretKeyRef:
                  name: immich-pg-secret
                  key: POSTGRES_PASSWORD
            DB_DATABASE_NAME:
              valueFrom:
                secretKeyRef:
                  name: immich-pg-secret
                  key: POSTGRES_DB
          resources:
            requests:
              cpu: 500m
              memory: 2513M
            limits:
              memory: 2513M
          securityContext:
              runAsUser: 1007
              runAsGroup: 1007
          probes:
            liveness:
              spec:
                initialDelaySeconds: 120
            readiness:
              spec:
                initialDelaySeconds: 120
  persistence:
    cache:
      type: persistentVolumeClaim
      existingClaim: immich-ml-pvc
    tmp:
      type: emptyDir
      sizeLimit: 5Gi
      accessMode: ReadWriteMany
