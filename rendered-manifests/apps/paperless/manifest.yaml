apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: paperless
  name: paperless
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-gotenberg-service
  namespace: paperless
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: paperless-gotenberg
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-pg-service
  namespace: paperless
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: paperless-pg
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-redis-service
  namespace: paperless
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: paperless-redis
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-server-service
  namespace: paperless
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: paperless-server
---
apiVersion: v1
kind: Service
metadata:
  name: paperless-tika-service
  namespace: paperless
spec:
  ports:
  - port: 9998
    protocol: TCP
    targetPort: 9998
  selector:
    app: paperless-tika
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-pg-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 50Gi
  mountOptions:
  - nfsvers=4.2
  nfs:
    path: /paperless-pg
    server: nfs.blunders.me
  storageClassName: nfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-redis-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 50Gi
  mountOptions:
  - hard
  - nfsvers=4.2
  nfs:
    path: /paperless-redis
    server: nfs.blunders.me
  storageClassName: nfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: paperless-server-pv
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 100Gi
  mountOptions:
  - nfsvers=4.2
  nfs:
    path: /paperless-server
    server: nfs.blunders.me
  storageClassName: nfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-pg-pvc
  namespace: paperless
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: nfs
  volumeName: paperless-pg-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-redis-pvc
  namespace: paperless
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: nfs
  volumeName: paperless-redis-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: paperless-server-pvc
  namespace: paperless
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs
  volumeName: paperless-server-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paperless-gotenberg
  name: gotenberg-deployment
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-gotenberg
  template:
    metadata:
      labels:
        app: paperless-gotenberg
    spec:
      containers:
      - args:
        - --chromium-disable-javascript=true
        - --chromium-allow-list=file:///tmp/.*
        command:
        - gotenberg
        env:
        - name: TZ
          value: America/Denver
        image: gotenberg/gotenberg:8.15.2
        name: gotenberg
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: "0.5"
            memory: 100Mi
          requests:
            cpu: "0.1"
            memory: 5Mi
        securityContext:
          privileged: false
          runAsGroup: 1001
          runAsUser: 1001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paperless-pg
  name: paperless-pg-deployment
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-pg
  template:
    metadata:
      labels:
        app: paperless-pg
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: POSTGRES_DB
              name: paperless-pg-secret
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRES_USER
              name: paperless-pg-secret
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: paperless-pg-secret
        image: docker.io/library/postgres:16.6
        name: paperless-pg
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          runAsGroup: 1011
          runAsUser: 1011
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: paperless-pg-pvc
      volumes:
      - name: paperless-pg-pvc
        persistentVolumeClaim:
          claimName: paperless-pg-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paperless-redis
  name: paperless-redis-deployment
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-redis
  template:
    metadata:
      labels:
        app: paperless-redis
    spec:
      containers:
      - image: docker.io/library/redis:7.4.1
        name: paperless-redis
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 10m
            memory: 30Mi
        securityContext:
          privileged: false
          runAsGroup: 1012
          runAsUser: 1012
        volumeMounts:
        - mountPath: /data
          name: paperless-redis-pvc
      volumes:
      - name: paperless-redis-pvc
        persistentVolumeClaim:
          claimName: paperless-redis-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paperless-server
  name: paperless-server-deployment
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-server
  template:
    metadata:
      labels:
        app: paperless-server
    spec:
      containers:
      - env:
        - name: PAPERLESS_REDIS
          value: redis://paperless-redis-service:6379
        - name: PAPERLESS_DBHOST
          value: paperless-pg-service
        - name: PAPERLESS_TIKA_ENABLED
          value: "1"
        - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
          value: http://paperless-gotenberg-service:3000
        - name: PAPERLESS_TIKA_ENDPOINT
          value: http://paperless-tika-service:9998
        - name: PAPERLESS_TRUSTED_PROXIES
          value: 10.244.0.0/16
        - name: PAPERLESS_URL
          value: https://paperless.blunders.me
        image: ghcr.io/paperless-ngx/paperless-ngx:2.13.5
        name: paperless-server
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 1
            memory: 2000Mi
          requests:
            cpu: 100m
            memory: 660Mi
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /usr/src/paperless/consume
          name: paperless-server-pvc
          subPath: consume
        - mountPath: /usr/src/paperless/data
          name: paperless-server-pvc
          subPath: data
        - mountPath: /usr/src/paperless/export
          name: paperless-server-pvc
          subPath: export
        - mountPath: /usr/src/paperless/media
          name: paperless-server-pvc
          subPath: media
      volumes:
      - name: paperless-server-pvc
        persistentVolumeClaim:
          claimName: paperless-server-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paperless-tika
  name: tika-deployment
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-tika
  template:
    metadata:
      labels:
        app: paperless-tika
    spec:
      containers:
      - env:
        - name: TZ
          value: America/Denver
        image: docker.io/apache/tika:3.0.0.0-full
        name: tika
        ports:
        - containerPort: 9998
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          privileged: false
          runAsGroup: 35002
          runAsUser: 35002
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: paperless-pg-external-secret
  namespace: paperless
spec:
  data:
  - remoteRef:
      key: paperless-pg-db
      property: database
    secretKey: db
  - remoteRef:
      key: paperless-pg-db
      property: username
    secretKey: username
  - remoteRef:
      key: paperless-pg-db
      property: password
    secretKey: password
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: op-prod
  target:
    creationPolicy: Owner
    name: paperless-pg-secret
    template:
      data:
        POSTGRES_DB: '{{ .db }}'
        POSTGRES_PASSWORD: '{{ .password }}'
        POSTGRES_USER: '{{ .username }}'
      engineVersion: v2
      type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: prod-cert-issuer
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  name: paperless
  namespace: paperless
spec:
  ingressClassName: nginx
  rules:
  - host: paperless.blunders.me
    http:
      paths:
      - backend:
          service:
            name: paperless-server-service
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - paperless.blunders.me
    secretName: paperless-secret-tls
